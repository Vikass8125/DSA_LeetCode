1359. Count All Valid Pickup and Delivery Options [HARD]

Given n orders, each order consist in pickup and delivery services. 

Count all valid pickup/delivery possible sequences such that delivery(i) is always after of pickup(i). 

Since the answer may be too large, return it modulo 10^9 + 7.

 

Example 1:

Input: n = 1
Output: 1
Explanation: Unique order (P1, D1), Delivery 1 always is after of Pickup 1.
Example 2:

Input: n = 2
Output: 6
Explanation: All possible orders: 
(P1,P2,D1,D2), (P1,P2,D2,D1), (P1,D1,P2,D2), (P2,P1,D1,D2), (P2,P1,D2,D1) and (P2,D2,P1,D1).
This is an invalid order (P1,D2,P2,D1) because Pickup 2 is after of Delivery 2.
Example 3:

Input: n = 3
Output: 90
 

Constraints:

1 <= n <= 500


EXPLANATION - MATH
https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options/solution/

Permutations (Math)
Intuition

Let's assume we want to place 4 different objects (A, B, C, D respectively) in some order in a row, what are all the possible ways to do it?
Now how can we approach this problem?

We can say we have 4 empty positions and at each position, we have to place one object.
At the 1st position, we can place any one of the 4 objects so we have 4 choices here.
At the 2nd position, we can only place any one of 3 objects because one object is already placed at the 1st position.
At the 3rd position, we can place any one of the remaining 2 objects (2 objects are already placed).
At the 4th position, we can place the remaining 1 object (3 objects are already placed).

Hence, total number of ways to place 44 different objects = 4 \cdot 3 \cdot 2 \cdot 1 = 4!4⋅3⋅2⋅1=4!.

SOLUTION

class Solution {
    public int countOrders(int n) {
        long ans = 1;
        int MOD = 1_000_000_007;

        for (int i = 1; i <= n; ++i) {
            // Ways to arrange all pickups, 1*2*3*4*5*...*n
            ans = ans * i;
            // Ways to arrange all deliveries, 1*3*5*...*(2n-1)
            ans = ans * (2 * i - 1);
            ans %= MOD;
        }
        
        return (int)ans;
    }
}



