347. Top K Frequent Elements  [MEDIUM]
Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order. 
Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]
Example 2:

Input: nums = [1], k = 1
Output: [1]
 

Constraints:

1 <= nums.length <= 105
k is in the range [1, the number of unique elements in the array].
It is guaranteed that the answer is unique.

MY_SOLUTION
class Solution {
    public int[] topKFrequent(int[] nums, int k) {        
        
        // store the freq
        HashMap<Integer,Integer> map = new HashMap<>();
        
        for(int num : nums) map.put(num,(map.getOrDefault(num,0) + 1));
        
        
        // store the elem in maxHeap with the maxFreq
        PriorityQueue<Integer> maxHeap = new PriorityQueue<>((a,b) -> map.get(b) - map.get(a));
        
        for(int key: map.keySet()) maxHeap.add(key);
        
        int res[] = new int[k];
        
        for(int i = 0; i < k; i++) res[i] = maxHeap.poll();
        
        return res;
        
        
    }
}


