567. Permutation in String [MEDIUM]
Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.

In other words, return true if one of s1's permutations is the substring of s2.

 

Example 1:

Input: s1 = "ab", s2 = "eidbaooo"
Output: true
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:

Input: s1 = "ab", s2 = "eidboaoo"
Output: false
 

Constraints:

1 <= s1.length, s2.length <= 104
s1 and s2 consist of lowercase English letters.

MY_SOLUTION
class Solution {
    public boolean checkInclusion(String s1, String s2) {
        //sort the two strings and compare them.
        //sort the short string s1s1 and all the 
        //substrings of s2, sort them and compare them with the           //sorted s1s1 string. 
        //If the two match completely, s1s1's 
        //permutation is a substring of s2s2, otherwise not.
        s1 = sort(s1);
        for (int i = 0; i <= s2.length() - s1.length(); i++) {
            if (s1.equals(sort(s2.substring(i, i + s1.length()))))
                return true;
        }
        return false;
    }
    
    public String sort(String s) {
        char[] t = s.toCharArray();
        Arrays.sort(t);
        return new String(t);
        
    }
}
